buildCmd: mvn -e -X -Dmaven.test.skip=true compile
testCmd: true
lineLength: 4096
skipVerification: true
cbmcArguments:
  # Do not generate coverage comments on generated tests.
  java-generate-no-comments: true
phases:
  -
  #Phase 0 PRETTY AND SIMPLE - Simple models, quick cover, pretty Tests, Do Not Test Private Method Directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # Instrument the file as opposed to the function only
      cover-only: file
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
  -
  #Phase 1 PRETTY AND COMPLEX - Standard models, longer run time, pretty tests, Do Not Test Private Method Directly
    timeout: 180
    cbmcArguments:
      # Use the standard models library
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 2
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # instrument the file as opposed to the function only
      cover-only: file
  -
  #Phase 2 Simple and Private Directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # If the logs contain output of the following then proceed to phase X
    nextPhase:
      # If the function is not analysable then do not pass onto the next phase
      not_analyzed: null
  -
  #Phase 3 Complex and Private Directly
    timeout: 180
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 3000
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 3
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
  -
  #Phase 4 EXCEPTIONS
    timeout: 180
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: true
      # Set an upper bound on loop unwinding.
  -
    #PHASE 5 Big numbers and less contraints on inputs 
    timeout: 300
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 100
      # Bound the length of input strings.
      max-nondet-string-length: 100
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 6
units:
#Target TGF: 94.0022893773
# - methods: 11
# - complexity: 581
# - construction: 5.45833333333
# - dependency: 6.95787545788
  - target:
    - dir: target/classes
      file: com/vone/mq/controller/WebController.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/controller/WebController.java
#Target TGF: 68.0
# - methods: 32
# - complexity: 104
# - construction: 10.0
# - dependency: 9.0
  - target:
    - dir: target/classes
      file: com/vone/mq/entity/PayOrder.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/entity/PayOrder.java
#Target TGF: 33.2818181818
# - methods: 3
# - complexity: 324
# - construction: 3.0
# - dependency: 0.690909090909
  - target:
    - dir: target/classes
      file: com/vone/mq/utils/HttpRequest.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/utils/HttpRequest.java
#Target TGF: 56.0
# - methods: 7
# - complexity: 166
# - construction: 6.0
# - dependency: 2.5
  - target:
    - dir: target/classes
      file: com/vone/mq/utils/Arith.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/utils/Arith.java
#Target TGF: 90.0916666667
# - methods: 14
# - complexity: 596
# - construction: 5.86666666667
# - dependency: 6.625
  - target:
    - dir: target/classes
      file: com/vone/mq/controller/AdminController.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/controller/AdminController.java
#Target TGF: 100.538888889
# - methods: 14
# - complexity: 821
# - construction: 5.86666666667
# - dependency: 6.85833333333
  - target:
    - dir: target/classes
      file: com/vone/mq/service/AdminService.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/service/AdminService.java
#Target TGF: 26.3333333333
# - methods: 6
# - complexity: 76
# - construction: 2.66666666667
# - dependency: 5.5
  - target:
    - dir: target/classes
      file: com/vone/mq/utils/ResUtil.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/utils/ResUtil.java
#Target TGF: 51.0
# - methods: 21
# - complexity: 74
# - construction: 8.0
# - dependency: 7.5
  - target:
    - dir: target/classes
      file: com/vone/mq/dto/CreateOrderRes.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/dto/CreateOrderRes.java
#Target TGF: 23.6666666667
# - methods: 11
# - complexity: 52
# - construction: 3.66666666667
# - dependency: 4.5
  - target:
    - dir: target/classes
      file: com/vone/mq/dto/PageRes.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/dto/PageRes.java
#Target TGF: 75.337962963
# - methods: 9
# - complexity: 1211
# - construction: 4.33333333333
# - dependency: 2.26944444444
  - target:
    - dir: target/classes
      file: com/vone/mq/service/WebService.class
      sourceDir: src/main/java
      sourceFile: com/vone/mq/service/WebService.java
dependenciesOnClasspath:
-
  source: classes
  classFile: com/vone/mq/dao/SettingDao.class
-
  source: classes
  classFile: com/vone/mq/entity/Setting.class
-
  source: classes
  classFile: com/vone/mq/dto/PageRes.class
-
  source: classes
  classFile: com/vone/mq/utils/ResUtil.class
-
  source: classes
  classFile: com/vone/mq/utils/HttpRequest.class
-
  source: classes
  classFile: com/vone/mq/dto/CommonRes.class
-
  source: classes
  classFile: com/vone/mq/service/AdminService$1.class
-
  source: classes
  classFile: com/vone/mq/service/AdminService$2.class
-
  source: classes
  classFile: com/vone/mq/utils/Arith.class
-
  source: classes
  classFile: com/vone/mq/dao/PayOrderDao.class
-
  source: classes
  classFile: com/vone/mq/dto/CreateOrderRes.class
-
  source: classes
  classFile: com/vone/mq/entity/PayQrcode.class
-
  source: classes
  classFile: com/vone/mq/dao/TmpPriceDao.class
-
  source: classes
  classFile: com/vone/mq/service/AdminService.class
-
  source: classes
  classFile: com/vone/mq/dao/PayQrcodeDao.class
-
  source: classes
  classFile: com/vone/mq/service/WebService.class
-
  source: classes
  classFile: com/vone/mq/entity/PayOrder.class